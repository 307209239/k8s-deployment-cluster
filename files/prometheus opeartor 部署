prometheus opeartor 部署


CREATE DATABASE IF NOT EXISTS grafana default charset utf8 COLLATE utf8_general_ci;
use grafana
CREATE TABLE `session` (
    `key`       CHAR(16) NOT NULL,
    `data`      BLOB,
    `expiry`    INT(11) UNSIGNED NOT NULL,
    PRIMARY KEY (`key`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

CREATE USER 'grafana' IDENTIFIED BY 'grafana!@#123';
GRANT SELECT ON grafana.* TO 'grafana';


创建 prometheus-operator 

kubectl create namespace prometheus-operator

helm install ./prometheus-operator --namespace prometheus-operator --name prometheus-operator --tls
或
helm install ./prometheus-operator --namespace prometheus-operator --name prometheus-operator \

    --set database.type=postgresql,persistence.enabled=true,persistence.accessMode=ReadWriteOnce,persistence.size=20Gi,service.type=ClusterIP,ingress.enable=true,ingress.hosts=xxxx.com,ingress.annotations[0]."kubernetes\.io/ingress\.class"=nginx \
    --dry-run --debug


helm install ./prometheus-operator --name prometheus-operator \
    --set prometheus.ingress.enabled=true \
    --set prometheus.ingress.hosts[0]=prometheus.testyongche.com \
    --set prometheus.ingress.annotations."kubernetes\.io/ingress\.class"=traefik \
    --set alertmanager.ingress.enabled=true \
    --set alertmanager.ingress.hosts[0]=alertmanager.testyongche.com \
    --set alertmanager.ingress.annotations."kubernetes\.io/ingress\.class"=traefik \
    --set grafana.ingress.enabled=true \
    --set grafana.ingress.hosts[0]=grafana.testyongche.com \
    --set grafana.ingress.annotations."kubernetes\.io/ingress\.class"=traefik \
    --tls


卸载 prometheus-operator

helm delete my-release

kubectl delete crd prometheuses.monitoring.coreos.com
kubectl delete crd prometheusrules.monitoring.coreos.com
kubectl delete crd servicemonitors.monitoring.coreos.com
kubectl delete crd alertmanagers.monitoring.coreos.com